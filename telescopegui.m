function varargout = telescopegui(varargin)
% TELESCOPEGUI MATLAB code for telescopegui.fig
%      TELESCOPEGUI, by itself, creates a new TELESCOPEGUI or raises the existing
%      singleton*.
%
%      H = TELESCOPEGUI returns the handle to a new TELESCOPEGUI or the handle to
%      the existing singleton*.
%
%      TELESCOPEGUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in TELESCOPEGUI.M with the given input arguments.
%
%      TELESCOPEGUI('Property','Value',...) creates a new TELESCOPEGUI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before telescopegui_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to telescopegui_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help telescopegui

% Last Modified by GUIDE v2.5 03-Apr-2016 21:54:54

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @telescopegui_OpeningFcn, ...
                   'gui_OutputFcn',  @telescopegui_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before telescopegui is made visible.
function telescopegui_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to telescopegui (see VARARGIN)

% Choose default command line output for telescopegui
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes telescopegui wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = telescopegui_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;



function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit2_Callback(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit2 as text
%        str2double(get(hObject,'String')) returns contents of edit2 as a double


% --- Executes during object creation, after setting all properties.
function edit2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


function importfile(fileToRead1)
%IMPORTFILE(FILETOREAD1)
%  Imports data from the specified file
%  FILETOREAD1:  file to read

%  Auto-generated by MATLAB on 13-Apr-2011 16:23:15
global star_locations;
% Import the file
newData1 = importdata(fileToRead1);

% Create new variables in the base workspace from those fields.
vars = fieldnames(newData1);
star_locations = newData1.data;

% --- Executes on button press in readStarLocations.
function readStarLocations_Callback(hObject, eventdata, handles)
% hObject    handle to readStarLocations (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
%open_system('spherical_telescope.mdl');
global star_locations;

importfile('StarLocations.txt');

open_system('TelescopeModel.slx');

time = tic;
for i=1:3
  % set_param('spherical_telescope/r', 'Value', int2str( (pi/180) * (star_locations(i,1)) ));
   set_param('TelescopeModel/providedPhi', 'Value', num2str((pi/180) * star_locations(i,3)));
   fprintf('providedPhi');
   set_param('TelescopeModel/providedTheta', 'Value', num2str((pi/180) * star_locations(i,2)));
   fprintf('providedTheta');
   sim('TelescopeModel.slx');
end


toc(time);
